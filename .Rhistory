if (!(is.na(Outliers(TubeStations$BAME))[1])){
BAMEStations <- TubeStations[-c(Outliers(TubeStations$BAME)),]
} else {
BAMEStations <- TubeStations
}
if (!(is.na(Outliers(TubeStations$SocialHousing))[1])){
SocialHousingStations <- TubeStations[-c(Outliers(TubeStations$SocialHousing)),]
} else {
SocialHousingStations <- TubeStations[-c(71,48)]
}
if (!(is.na(Outliers(TubeStations$JobSeekers))[1])){
JobSeekersStations <- TubeStations[-c(Outliers(TubeStations$JobSeekers)),]
} else {
JobSeekersStations <- TubeStations[-c(71,48)]
}
if (!(is.na(Outliers(TubeStations$VoterTurnout))[1])){
VoterTurnoutStations <- TubeStations[-c(Outliers(TubeStations$VoterTurnout)),]
} else {
VoterTurnoutStations <- TubeStations[-c(71,48)]
}
if (!(is.na(Outliers(TubeStations$WorkingAge))[1])){
WorkingAgeStations <- TubeStations[-c(Outliers(TubeStations$WorkingAge)),]
} else {
WorkingAgeStations <- TubeStations
}
if (!(is.na(Outliers(TubeStations$DeprivationRank))[1])){
DeprivationRankStations <- TubeStations[-c(Outliers(TubeStations$DeprivationRank)),]
} else {
DeprivationRankStations <- TubeStations[-c(71,48)]
}
if (!(is.na(Outliers(TubeStations$Crime))[1])){
CrimeStations <- TubeStations[-c(Outliers(TubeStations$Crime)),]
} else {
CrimeStations <- TubeStations
}
variableCodes <- list(summary(lm(as.formula(IncomeStations$Income ~ IncomeStations$ClosenessCentrality))),
summary(lm(as.formula(AgeStations$Age ~ AgeStations$ClosenessCentrality))),
summary(lm(as.formula(CarStations$CarOwnership ~ CarStations$ClosenessCentrality))),
summary(lm(as.formula(PopStations$Popu ~ PopStations$ClosenessCentrality))),
summary(lm(as.formula(EmployStations$Employment ~ EmployStations$ClosenessCentrality))),
summary(lm(as.formula(BikeStations$BikeUse ~ BikeStations$ClosenessCentrality))),
summary(lm(as.formula(HousePricesStations$HousePrices ~ HousePricesStations$ClosenessCentrality))),
summary(lm(as.formula(EmployedPeopleStations$EmployedPeople ~ EmployedPeopleStations$ClosenessCentrality))),
summary(lm(as.formula(BAMEStations$BAME ~ BAMEStations$ClosenessCentrality))),
summary(lm(as.formula(SocialHousingStations$SocialHousing ~ SocialHousingStations$ClosenessCentrality))),
summary(lm(as.formula(JobSeekersStations$JobSeekers ~ JobSeekersStations$ClosenessCentrality))),
summary(lm(as.formula(VoterTurnoutStations$VoterTurnout ~ VoterTurnoutStations$ClosenessCentrality))),
summary(lm(as.formula(WorkingAgeStations$WorkingAge ~ WorkingAgeStations$ClosenessCentrality))),
summary(lm(as.formula(DeprivationRankStations$DeprivationRank ~ DeprivationRankStations$ClosenessCentrality))),
summary(lm(as.formula(CrimeStations$Crime ~ CrimeStations$ClosenessCentrality)))
)
rIncome <- ggplot(WardData) +
geom_point(data = IncomeStations,
inherit.aes = FALSE,
mapping = aes(x = IncomeStations$ClosenessCentrality, y= IncomeStations$Income),
colour = "blue") +
geom_abline(intercept = variableCodes[[1]]$coefficients[1,1],
slope = variableCodes[[1]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.") +
ylab(label = "Average household income in GBP") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rAge <- ggplot(WardData) +
geom_point(data = AgeStations,
inherit.aes = FALSE,
mapping = aes(x = AgeStations$ClosenessCentrality, y= AgeStations$Age),
colour = "blue") +
geom_abline(intercept = variableCodes[[2]]$coefficients[1,1],
slope = variableCodes[[2]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.") +
ylab(label = "Average age of residents.") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rCars <- ggplot(WardData) +
geom_point(data = CarStations,
inherit.aes = FALSE,
mapping = aes(x = CarStations$ClosenessCentrality, y= CarStations$CarOwnership),
colour = "blue") +
geom_abline(intercept = variableCodes[[3]]$coefficients[1,1],
slope = variableCodes[[3]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.")  +
ylab(label = "Average car ownership per household.") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rPopulation <- ggplot(WardData) +
geom_point(data = PopStations,
inherit.aes = FALSE,
mapping = aes(x = PopStations$ClosenessCentrality, y= PopStations$Popu),
colour = "blue") +
geom_abline(intercept = variableCodes[[4]]$coefficients[1,1],
slope = variableCodes[[4]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.") +
ylab(label = "Number of people closest to station.") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rEmployment <- ggplot(WardData) +
geom_point(data = EmployStations,
inherit.aes = FALSE,
mapping = aes(x = EmployStations$ClosenessCentrality, y= EmployStations$Employment),
colour = "blue") +
geom_abline(intercept = variableCodes[[5]]$coefficients[1,1],
slope = variableCodes[[5]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.") +
ylab(label = "Unemployment rate.") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rBike <- ggplot(WardData) +
geom_point(data = BikeStations,
inherit.aes = FALSE,
mapping = aes(x = BikeStations$ClosenessCentrality, y= BikeStations$BikeUse),
colour = "blue") +
geom_abline(intercept = variableCodes[[6]]$coefficients[1,1],
slope = variableCodes[[6]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.")  +
ylab(label = "Percentage of residents who commute by bicyle.") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rHousePrices <- ggplot(WardData) +
geom_point(data = HousePricesStations,
inherit.aes = FALSE,
mapping = aes(x = HousePricesStations$ClosenessCentrality, y= HousePricesStations$HousePrices),
colour = "blue") +
geom_abline(intercept = variableCodes[[7]]$coefficients[1,1],
slope = variableCodes[[7]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.")  +
ylab(label = "Average house price.") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rEmployedPeople <- ggplot(WardData) +
geom_point(data = EmployedPeopleStations,
inherit.aes = FALSE,
mapping = aes(x = EmployedPeopleStations$ClosenessCentrality, y= EmployedPeopleStations$EmployedPeople),
colour = "blue") +
geom_abline(intercept = variableCodes[[8]]$coefficients[1,1],
slope = variableCodes[[8]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.")  +
ylab(label = "Number of employed people cloest to station.") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rBAME <- ggplot(WardData) +
geom_point(data = BAMEStations,
inherit.aes = FALSE,
mapping = aes(x = BAMEStations$ClosenessCentrality, y= BAMEStations$BAME),
colour = "blue") +
geom_abline(intercept = variableCodes[[9]]$coefficients[1,1],
slope = variableCodes[[9]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.")  +
ylab(label = "Percentage of people of black, asian or minority ethnicity.") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rSocialHousing <- ggplot(WardData) +
geom_point(data = SocialHousingStations,
inherit.aes = FALSE,
mapping = aes(x = SocialHousingStations$ClosenessCentrality, y= SocialHousingStations$SocialHousing),
colour = "blue") +
geom_abline(intercept = variableCodes[[10]]$coefficients[1,1],
slope = variableCodes[[10]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.")  +
ylab(label = "Percentage of dwelings that are socially rented.") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rJobSeekers <- ggplot(WardData) +
geom_point(data = JobSeekersStations,
inherit.aes = FALSE,
mapping = aes(x = JobSeekersStations$ClosenessCentrality, y= JobSeekersStations$JobSeekers),
colour = "blue") +
geom_abline(intercept = variableCodes[[11]]$coefficients[1,1],
slope = variableCodes[[11]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.")  +
ylab(label = "Percentage of people on a job seekers allowance.") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rVoterTurnout <- ggplot(WardData) +
geom_point(data = VoterTurnoutStations,
inherit.aes = FALSE,
mapping = aes(x = VoterTurnoutStations$ClosenessCentrality, y= VoterTurnoutStations$VoterTurnout),
colour = "blue") +
geom_abline(intercept = variableCodes[[12]]$coefficients[1,1],
slope = variableCodes[[12]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.")  +
ylab(label = "Voter turnout in 2011 mayoral elections.") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rWorkingAge <- ggplot(WardData) +
geom_point(data = WorkingAgeStations,
inherit.aes = FALSE,
mapping = aes(x = WorkingAgeStations$ClosenessCentrality, y= WorkingAgeStations$WorkingAge),
colour = "blue") +
geom_abline(intercept = variableCodes[[13]]$coefficients[1,1],
slope = variableCodes[[13]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.")  +
ylab(label = "Number of working aged people (16-64 years).") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rDeprivationRank <- ggplot(WardData) +
geom_point(data = DeprivationRankStations,
inherit.aes = FALSE,
mapping = aes(x = DeprivationRankStations$ClosenessCentrality, y= DeprivationRankStations$DeprivationRank),
colour = "blue") +
geom_abline(intercept = variableCodes[[14]]$coefficients[1,1],
slope = variableCodes[[14]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.")  +
ylab(label = "The average deprivation rank (lower value represents more deprived).")+
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
rCrime <- ggplot(WardData) +
geom_point(data = CrimeStations,
inherit.aes = FALSE,
mapping = aes(x = CrimeStations$ClosenessCentrality, y= CrimeStations$Crime),
colour = "blue") +
geom_abline(intercept = variableCodes[[15]]$coefficients[1,1],
slope = variableCodes[[15]]$coefficients[2,1]) +
xlab(label = "Average time to other stations, weighted by zone.")  +
ylab(label = "Average crime rate in area.") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"),axis.line= element_line(size=2,colour="black"))
RelationList <- list(rIncome,rAge,rCars,rPopulation,
rEmployment,rBike, rHousePrices,
rEmployedPeople, rBAME,
rSocialHousing, rJobSeekers,
rVoterTurnout, rWorkingAge,
rDeprivationRank, rCrime)
# Develop palettes for each variable in order to allow for colourimetric distinction between the
#  relevant variable in the leaflet plot. These plattes are suitable for people with colour blindness
#  and were also chosen to allow for simple distinction between values and visual congurency with
#  the theme of the Shiny application.
#
palCar <- colorNumeric(
palette = "PuBu",
domain = TubeStations$CarOwnership)
palIncome <- colorNumeric(
palette = "PuBu",
domain = TubeStations$Income)
palAge <- colorNumeric(
palette = "PuBu",
domain = TubeStations$Age)
palPop <- colorNumeric(
palette = "PuBu",
domain = TubeStations$Popu)
palEmploy <- colorNumeric(
palette = "PuBu",
domain = TubeStations$Employment)
palBikeUse <- colorNumeric(
palette = "PuBu",
domain = TubeStations$BikeUse)
palHousePrices <- colorNumeric(
palette = "PuBu",
domain = TubeStations$HousePrices)
palEmployedPeople <- colorNumeric(
palette = "PuBu",
domain = TubeStations$EmployedPeple)
palBAME <- colorNumeric(
palette = "PuBu",
domain = TubeStations$BAME)
palSocialHousing <- colorNumeric(
palette = "PuBu",
domain = TubeStations$SocialHousing)
palJobSeekers <- colorNumeric(
palette = "PuBu",
domain = TubeStations$JobSeekers)
palVoterTurnout <- colorNumeric(
palette = "PuBu",
domain = TubeStations$VoterTurnout)
palWorkingAge <- colorNumeric(
palette = "PuBu",
domain = TubeStations$WorkingAge)
palDeprivationRank <- colorNumeric(
palette = "PuBu",
domain = TubeStations$DeprivationRank)
palCrime <- colorNumeric(
palette = "PuBu",
domain = TubeStations$Crime)
# These are the leaflet plots for each variable. The colour is a function of the selected WardData
#  variable whereas the radius of the circle markers are a function of the weighted closeensss centrality
#  of the tube stations. This allows for simple  mutlivariate interpretation of spatial data.
#
# Leaflet was chosen over ggplot2 given the subjectively aethetically pleasing nature of the pan and
#  zoom funcitons within leaflet plots.
#
mCar <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palCar(TubeStations$CarOwnership),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Cars per Household: ", round(TubeStations$CarOwnership,digits=1)))%>%
addLegend("bottomright", pal = palCar, values = TubeStations$CarOwnership,
opacity = 1 )%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mIncome <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palIncome(TubeStations$Income),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,"," ," Lines: ",TubeStations$Line,","," Average Household Income in Pounds: ", round(TubeStations$Income,digits=0)))%>%
addLegend("bottomright", pal = palIncome, values = TubeStations$Income,
labFormat = labelFormat(prefix = "Â£"),
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mAge <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palAge(TubeStations$Age),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Average Age: ", round(TubeStations$Age,digits=1)))%>%
addLegend("bottomright", pal = palAge, values = TubeStations$Age,
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mPop <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palPop(TubeStations$Popu),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Service Population: ",round(TubeStations$Popu,digits=0)))%>%
addLegend("bottomright", pal = palPop, values = TubeStations$Popu,
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mEmploy <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palEmploy(TubeStations$Employment),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Unemployment Rate: ",round(TubeStations$Employment,digits=2)))%>%
addLegend("bottomright", pal = palEmploy, values = TubeStations$Employment,
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mBikeUse <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palBikeUse(TubeStations$BikeUse),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Percentage of service population who ride bicycles: ",round(TubeStations$BikeUse,digits=2)))%>%
addLegend("bottomright", pal = palBikeUse, values = TubeStations$BikeUse,
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mHousePrices <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palHousePrices(TubeStations$HousePrices),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Average house price: ",round(TubeStations$HousePrices,digits=0)))%>%
addLegend("bottomright", pal = palHousePrices, values = TubeStations$HousePrices,
opacity = 1, labFormat = labelFormat(prefix = "Â£"))%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mEmployedPeople <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palEmployedPeople(TubeStations$EmployedPeople),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Number of employed people: ",round(TubeStations$EmployedPeople,digits=2)))%>%
addLegend("bottomright", pal = palEmployedPeople, values = TubeStations$EmployedPeople,
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mBAME <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palBAME(TubeStations$BAME),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Percentage of population who are of black, asian or minority ethnicity: ",round(TubeStations$BAME,digits=2)))%>%
addLegend("bottomright", pal = palBAME, values = TubeStations$BAME,
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mJobSeekers <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palJobSeekers(TubeStations$JobSeekers ),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Percentage of population on job seekers allowance: ",round(TubeStations$JobSeekers,digits=2)))%>%
addLegend("bottomright", pal = palJobSeekers , values = TubeStations$JobSeekers ,
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mSocialHousing <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palSocialHousing (TubeStations$SocialHousing  ),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Percentage of dwellings that are socally rented: ",round(TubeStations$SocialHousing ,digits=2)))%>%
addLegend("bottomright", pal = palSocialHousing , values = TubeStations$SocialHousing  ,
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mVoterTurnout <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palVoterTurnout (TubeStations$VoterTurnout  ),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Voter turnout at 2011 Mayoral elections: ",round(TubeStations$VoterTurnout ,digits=2)))%>%
addLegend("bottomright", pal = palVoterTurnout , values = TubeStations$VoterTurnout  ,
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mWorkingAge <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palWorkingAge (TubeStations$WorkingAge  ),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Number of working age people (16-64 years): ",round(TubeStations$WorkingAge ,digits=2)))%>%
addLegend("bottomright", pal = palWorkingAge , values = TubeStations$WorkingAge  ,
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mDeprivationRank <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palDeprivationRank (TubeStations$DeprivationRank  ),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Average UK-wide deprivation rank: ",round(TubeStations$DeprivationRank ,digits=2)))%>%
addLegend("bottomright", pal = palDeprivationRank , values = TubeStations$DeprivationRank  ,
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
mCrime <- leaflet(TubeStations) %>%
addTiles() %>%
addCircleMarkers(
lng = TubeStations$Longitude,
lat = TubeStations$Latitude,
radius = TubeStations$ClosenessCentrality,
fillColor = palCrime (TubeStations$Crime  ),
color = "black",
fillOpacity = 1,
popup = paste("Name: ",TubeStations$CommonName,","," Lines: ",TubeStations$Line,","," Average crime rate: ",round(TubeStations$Crime ,digits=2)))%>%
addLegend("bottomright", pal = palCrime , values = TubeStations$Crime  ,
opacity = 1)%>%
addScaleBar(position = "bottomleft")%>%
addControl(img(src="northSign.png"),position = "topright")
# Leaflet plots are collated into a list for integration with Shiny input selections.
#
leafList <- list(mIncome,mAge, mCar,mPop,mEmploy, mBikeUse,
mHousePrices, mEmployedPeople, mBAME,
mSocialHousing, mJobSeekers, mVoterTurnout,
mWorkingAge, mDeprivationRank, mCrime)
connectivityDist <- ggplot(TubeStations,aes(ClosenessCentrality)) +
geom_density() +
xlab(label ="Weighted average time to other stations") +
ylab(label = "Proportion of stations out of 1") +
ggtitle(label = "Distribution of weighted average time to other stations") +
theme(panel.background = element_rect(fill = "white"), panel.grid.major = element_line(colour = "grey"), axis.line= element_line(size=2,colour="black"))
#
# END
#
#..............................................................................................
#
#Edits
# Plot Labels
# t tests for SLG and adjusted alpha value for a t test
#   review QM coursework hints for this.
# Improve the commentary.
#
# Move the legend title to the bottom left as a text box.
#
# Adjust the centrality labelling.
#
#
sum(TubeStations$Popu)
min(TubeStations$Popu)
runApp()
install.packages("rsconnect")
rsconnect::setAccountInfo(name='smp-southampton',
token='0C815147133A875730D72896B0F782D5',
secret='<SECRET>')
runApp()
runApp()
